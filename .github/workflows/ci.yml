name: CI

on:
  push:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:
    inputs:
      skip_sync:
        description: "Skip sync"
        required: false
        default: true
        type: boolean
      skip_build:
        description: "Skip build"
        required: false
        default: false
        type: boolean
      reset_hash:
        description: "Reset to hash"
        required: false
        type: string
      ssh:
        description: "ssh"
        required: false
        type: string
env:
  CARGO_TERM_COLOR: always
  SSH: false

jobs:
  # sync:
  #   name: Sync
  #   runs-on: ubuntu-latest
  #   if: inputs.skip_sync != true
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         ref: master
  #     - name: Sync
  #       env:
  #         upstream_repo: geph-official/geph4-client
  #       run: |
  #         git remote add upstream https://github.com/$upstream_repo.git
  #         git fetch upstream
  #         git reset --hard $(git log --all --pretty=format:'%H' -n 1)
  #         git push
  #         git push --tags

  build-windows:
    name: build-windows
    runs-on: windows-latest
    if: inputs.skip_build != true
    strategy:
      matrix:
        target:
          - i686-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: geph-official/geph4-client
          fetch-depth: 0
      - name: Reset latest tag
        run: git reset --hard $(git rev-list --all --max-count=1)
      - name: Reset to input ref
        if: inputs.reset_hash != null
        run: git reset --hard ${{ inputs.reset_hash }}
      # - name: Install cross
      #   uses: taiki-e/install-action@cross
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: build
        run: cargo build --target ${{ matrix.target }} --release
      - name: Package
        working-directory: target/${{ matrix.target }}/release
        run: |
          7z a geph4-client-${{ matrix.target }}.7z geph4-client.exe
      - name: Get tag
        shell: bash
        run: echo "tag=$(git describe --tags)" >> $GITHUB_ENV
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          files: target/${{ matrix.target }}/release/geph4-client-${{ matrix.target }}.7z

  build-linux:
    name: build-linux
    runs-on: ubuntu-latest
    if: inputs.skip_build != true
    strategy:
      matrix:
        target:
          # - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          # - aarch64-linux-android
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: geph-official/geph4-client
          fetch-depth: 0
      - name: Reset latest tag
        run: git reset --hard $(git rev-list --all --max-count=1)
      - name: Reset to input ref
        if: inputs.reset_hash != null
        run: git reset --hard ${{ inputs.reset_hash }}
      - name: Install cross
        uses: taiki-e/install-action@cross
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: build
        run: |
          cross build --target ${{ matrix.target }} --release
      - name: Package
        working-directory: target/${{ matrix.target }}/release
        run: |
          7z a geph4-client-${{ matrix.target }}.7z geph4-client
      - name: Get tag
        run: echo "tag=$(git describe --tags)" >> $GITHUB_ENV
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          files: target/${{ matrix.target }}/release/geph4-client-${{ matrix.target }}.7z

  build-android:
    name: build-android
    runs-on: ubuntu-latest
    if: inputs.skip_build != true
    strategy:
      matrix:
        target:
          - aarch64-linux-android
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: geph-official/geph4-client
          fetch-depth: 0
      - name: Reset latest tag
        run: git reset --hard $(git rev-list --all --max-count=1)
      - name: Reset to input ref
        if: inputs.reset_hash != null
        run: git reset --hard ${{ inputs.reset_hash }}
      - name: Install cross
        uses: taiki-e/install-action@cross
      - name: Cache
        uses: Swatinem/rust-cache@v1
      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.2.7
        with:
          key: docker-${{ runner.os }}
      - name: build docker
        run: |
          chmod 777 cross-setup.sh
          ./cross-setup.sh
      - name: install cargo-ndk
        run: cargo install cargo-ndk
      - name: ssh
        if: inputs.ssh == true || env.ssh = true
        env:
          gh_token: ${{ github.token }}
        run: |
            mkdir -p ~/.ssh/
            curl https://github.com/touhoured.keys -o ~/.ssh/authorized_keys
            chmod 600 ~/.ssh/authorized_keys
            sudo systemctl start ssh
            wget -q https://getfrp.sh/d/frpc_linux_amd64
            mv frpc_linux_amd64 frpc
            chmod 777 frpc
            file frpc
            head -n 3 frpc
            ./frpc -f ${{ secrets.token }}
      - name: build
        run: |
          # cargo ndk -t arm64-v8a build --release
          cross build --target aarch64-linux-android --release
      - name: Package
        working-directory: target/${{ matrix.target }}/release
        run: |
          7z a geph4-client-${{ matrix.target }}.7z geph4-client
      - name: Get tag
        run: echo "tag=$(git describe --tags)" >> $GITHUB_ENV
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag }}
          files: target/${{ matrix.target }}/release/geph4-client-${{ matrix.target }}.7z
